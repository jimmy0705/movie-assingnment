{"version":3,"sources":["components/Navbar.js","components/Cardlist.js","components/Dropdown.js","components/Search.js","components/FavList.js","components/Favourtie.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","Navbar","collapseOnSelect","expand","bg","fixed","Container","to","Toggle","aria-controls","Collapse","id","Nav","MovieCard","movies","movieId","movieName","type","useState","favourite","setFavourite","useEffect","x","localStorage","getItem","JSON","parse","map","i","style","width","height","src","Poster","Title","Year","href","onClick","e","preventDefault","my_fav","my_fav1","ele","includes","filter","el","push","setItem","stringify","Dropdwn","loading","nodata","value","setValue","undefined","Type","DropdownButton","title","textAlign","console","log","target","text","Dropdown","Item","movie","imdbID","key","Search","query","setQuery","setLoading","setNodata","setErrorMessage","setMovies","a","url","fetch","res","json","data","Response","error","marginTop","fontWeight","Form","inline","onSubmit","Control","placeholder","onChange","required","Button","padding","FavList","Favorites","Boolean","setData","my_favs","my_favs1","marginBottom","dt","fontSize","App","path","exact","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8d91e850.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport { Container,Navbar,Nav} from 'react-bootstrap';\nimport './common.css'\n\nfunction Header(props) {\n\n  \n\n  return (\n    <div className=\"navbar-area\" >\n\n\n\n<Navbar collapseOnSelect expand=\"lg\" bg=\"light\" fixed=\"top\" >\n<Container>\n<Link to=\"/movie-assingnment\" className=\"home-link\">Home </Link>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n   \n    <Nav className=\"ml-auto\">\n      {/* <Nav.Link href=\"#deets\">Favourites</Nav.Link> */}\n      <Link to=\"/favourite\" className=\"favourite-link\"> Favourites </Link>\n   \n    </Nav>\n  </Navbar.Collapse>\n  </Container>\n</Navbar>\n \n  \n\n   \n    </div>\n  );\n}\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\n\n\n//import { Button,Container,Navbar,Nav} from 'react-bootstrap';\nimport './common.css'\n\nfunction MovieCard(props) {\n // console.log(props)\n  const {movies,movieId,movieName,type  }=props\n\n  // states goes here\n  const [favourite,setFavourite]=useState(false)\n  const [ids,setIds]=useState([])\n\n\n\n  //event handlers goes from here\n\n  function favouriteHandler(e){\n    e.preventDefault();\n    setFavourite(!favourite)\n\n    let my_fav=localStorage.getItem('id')\n        \n        let my_fav1=JSON.parse(my_fav)||[]\n        \n        let mapped=my_fav1.map(ele => ele.movieId)\n        \n        if(mapped.includes(movieId)){\n\n              my_fav1=my_fav1.filter( el => el.movieId!== movieId )\n \n            \n        }\n        else\n\n       // alert(\"do something\")\n        {my_fav1.push({movieId,movieName,type})}\n        \n    \n        \n        localStorage.setItem('id',JSON.stringify(my_fav1))\n\n    \n  \n  }\n\n  useEffect(()=>{\n    const x= localStorage.getItem('id')\n    const arr=JSON.parse(x)||[]\n    arr.map((x,i)=>{\n        if(x.movieId===movieId){\n            setFavourite(true)\n        }\n    })\n \n },[])\n  \n\n  return (\n    // <div className=\"cards-area\" >\n\n<div className=\"card\" style={{width: \"18rem\"}}>\n  {/* <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"180\" xmlns=\"http://www.w3.org/2000/svg\" aria-label=\"Placeholder: Image cap\" preserveAspectRatio=\"xMidYMid slice\" role=\"img\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#868e96\"/><text x=\"50%\" y=\"50%\" fill=\"#dee2e6\" dy=\".3em\">Image cap</text></svg> */}\n  <img className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"180\"  src={movies.Poster}/>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{movies.Title}</h5>\n  <p className=\"card-text\">{movies.Year}</p>\n    <a href=\"#\" className=\"btn btn-primary\" onClick={favouriteHandler} > {!favourite ? \"Favorite\" : \"Unfavorite\"}</a>\n  </div>\n{/* </div> */}\n\n\n \n  \n\n   \n    </div>\n  );\n}\n\nexport default MovieCard;\n","import React,{useState,useEffect} from 'react';\n\n\nimport {Container,DropdownButton,Dropdown} from 'react-bootstrap';\nimport './common.css'\nimport MovieCard from './Cardlist';\n\nfunction Dropdwn(props) {\n //console.log(props)\n\n let {loading,nodata,movies} = props\n\n// state mangement for this component goes here\nconst [value,setValue] = useState(\"All\")\n//event handlers goes from here\n\n\nfunction dropdownHandler(e){\n    e.preventDefault();\n   console.log(e.target.text)\n    setValue(e.target.text)\n   // DropdownHnadler(dropdownValue)\n  \n  \n  }\n\n\n  if (movies!==undefined ){\n    if (value==='movie'){\n       \n        movies=movies.filter(el => el.Type==='movie')\n    }\n    else if (value==='series'){\n        movies=movies.filter(el => el.Type==='series')\n    }\n    else if (value==='episodes'){\n        movies=movies.filter(el => el.Type==='episodes')\n    }\n   }\n  \n  \n  useEffect(()=>{\n  \n  },[value])\n\n\n\n  \n\n  return (\n    <>\n     <DropdownButton className=\"drp-button\"  id=\"dropdown-basic-button\" title={value} style={{textAlign:\"center\"}}>\n      <div onClick={dropdownHandler} >\n     <Dropdown.Item href=\"#\">All</Dropdown.Item>\n      <Dropdown.Item href=\"#?\">movie</Dropdown.Item>\n      <Dropdown.Item href=\"#\">series</Dropdown.Item>\n      <Dropdown.Item href=\"#\">episodes</Dropdown.Item>\n      </div>\n</DropdownButton>\n\n   \n   <>\n    <div className=\"cards-area\" >\n   {loading ? (\n         <h3 className=\"result-loading\" style={{textAlign:\"center\"}}>loading...</h3>\n         ): nodata ? (<h3 className=\"result-nodata\" style={{textAlign:\"center\"}}>Too Many Datas...</h3>) : (\n          movies.map(movie => (\n            <MovieCard movies={movie} movieId={movie.imdbID} movieName={movie.Title} type={movie.Type} key={movie.imdbID} />\n         ))\n        )}\n        </div>\n   </>\n   {/* <MovieCard/> */}\n    \n    </>\n  );\n}\n\nexport default Dropdwn;\n","\nimport React,{useState} from 'react';\n\n\nimport { Button,Form,Container,Row,Col,InputGroup,FormControl,Dropdown,DropdownButton } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './common.css'\nimport Dropdwn from './Dropdown';\n\n\n\n\n  \nfunction Search(props) {\n\n    //states- query, movies,totalresults\n    const [query, setQuery] = useState('')\n    const [loading, setLoading] = useState(false);\n    const [nodata, setNodata] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null);\n    //const [value,setValue] = useState(\"All\")\n    const [movies, setMovies] = useState([]);\n\n   \n   \n   \n    async  function searchMovies (e) {\n     \n      e.preventDefault();\n     // console.log(query);\n      setLoading(true)\n     // const query = \"inception\";\n      \n      const url = `http://www.omdbapi.com/?apikey=e0df3e16&s=${query}&page=1&type=`;\n      \n      \n      try {\n          const res = await fetch(url);\n          const data  = await res.json();\n         // console.log(typeof(data.Response))\n          console.log(data.Response)\n          if(data.Response === \"False\"){\n            setNodata(true)\n            setLoading(false);\n            return;\n          }\n          setLoading(false);\n          setNodata(false);\n          setMovies(data.Search);\n          \n        // console.log(data)\n      }catch(err){\n          console.error(err);\n          setErrorMessage(\"something went wrong\");\n          setLoading(false);\n      }\n  }\n\n  \n\n\n\n\n\n\n  return (\n    <div className=\"search-area\" style={{marginTop:\"6em\"}}>\n\n<Container>\n  <h2 style={{textAlign:\"center\",fontWeight:\"600\",marginTop:\"1em\"}}>Search Movies</h2>\n\n<Form inline onSubmit={searchMovies} >\n\n  <Form.Control\n    className=\"mb-2 mr-sm-2\"\n    id=\"inlineFormInputName2\"\n    placeholder=\"Search movies...\"\n    value={query}\n    onChange={e=>setQuery(e.target.value)}\n    required\n  />\n \n  <Button type=\"submit\" className=\"mb-2\" style={{padding:\"6px 1.5em\"}}>\n    Submit\n  </Button>\n</Form>\n\n<Dropdwn movies ={movies} loading={loading} nodata={nodata}/>\n   \n</Container>\n  \n      \n    </div>\n  );\n}\n\nexport default Search;\n","\nimport React from 'react';\nimport './common.css'\n\n function FavList(props){\n     console.log(props)\n       let {movie} = props\n    return(\n\n        <div className=\"favourite-card\">\n        <p className=\"favourite-p\" style={{}}>{movie.movieName}</p>\n       \n            \n     </div>\n\n\n    )\n\n\n\n   \n\n\n    \n   \n\n}\n\nexport default FavList;","\nimport React, { useEffect,useState } from 'react';\nimport './common.css'\nimport FavList from './FavList';\n\n function Favorites(props){\n\n    const [favourite, setFavourite] = useState(Boolean(localStorage.getItem(\"id\")))\n    const[data,setData] = useState([])\n\n\n    useEffect(()=>{\n        const my_favs= localStorage.getItem('id')\n        var my_favs1=JSON.parse(my_favs)||[];\n        console.log(my_favs1)\n        setData(my_favs1)\n    },[])\n   \n    if(!favourite){\n        return (\n            <>\n               <h1 style={{textAlign:\"center\",marginTop:\"4em\",fontSize:\"600\"}}>No Favorite Movies added</h1>\n                   \n            </>\n            )\n\n    }\n    else{\n\n        return(\n            <>\n            <h1 className=\"favourite-title\" style={{textAlign:\"center\",marginTop:\"4em\",marginBottom:\"1em\",fontWeight:\"600\"}}>Favorite Movies</h1>\n            {data.map(dt=>{\n                return(\n                    <FavList movie={dt}  key ={dt.movieId}/>\n                )\n            })}\n          \n                \n         </>\n\n        )\n    }\n   \n\n}\n\nexport default Favorites;","import React from 'react';\nimport {Route,Redirect} from 'react-router-dom'\n\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Navbar';\nimport Search from './components/Search';\nimport Favorites from './components/Favourtie'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Route path=\"/movie-assingnment\" exact>\n      <Search/>\n     </Route>\n     <Redirect to=\"/movie-assingnment\"/>\n     <Route path=\"/favourite\">\n     <Favorites/>\n     </Route>\n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}